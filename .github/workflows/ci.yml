name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        java-version: [21]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK ${{ matrix.java-version }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Run tests
      run: ./gradlew test --continue
    
    - name: List test results
      run: |
        echo "=== Test Results Summary ==="
        find . -name "*.xml" -path "*/test-results/*" | head -20
        echo "=== Build Directories ==="
        find . -name "build" -type d | head -10
        echo "=== Test Execution Complete ==="

  native-image:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
    
    - name: Set up GraalVM
      uses: graalvm/setup-graalvm@v1
      with:
        version: '22.3.2'
        java-version: '21'
        components: 'native-image'
      continue-on-error: true
    
    - name: Fallback - Install GraalVM manually
      if: failure()
      run: |
        echo "GraalVM setup failed, trying manual installation..."
        wget https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-23.0.1/graalvm-ce-java21-23.0.1-linux-amd64.tar.gz
        tar -xzf graalvm-ce-java21-23.0.1-linux-amd64.tar.gz
        export GRAALVM_HOME=$PWD/graalvm-ce-java21-23.0.1
        export PATH=$GRAALVM_HOME/bin:$PATH
        echo "GRAALVM_HOME=$GRAALVM_HOME" >> $GITHUB_ENV
        echo "PATH=$GRAALVM_HOME/bin:$PATH" >> $GITHUB_ENV
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Build native image
      run: ./gradlew :examples:nativeCompile
    
    - name: Test native image
      run: |
        ./examples/build/native/nativeCompile/examples &
        sleep 5
        curl -f http://localhost:8080/ || exit 1
        curl -f http://localhost:8080/health || exit 1
        pkill -f examples

  publish:
    runs-on: ubuntu-latest
    needs: [test, native-image]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: 21
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Make gradlew executable
      run: chmod +x ./gradlew
    
    - name: Publish to Maven Central
      run: ./gradlew publish
      env:
        OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
        SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
        SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
